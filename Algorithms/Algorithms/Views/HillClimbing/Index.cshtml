@model Algorithms.ViewModel.HillClimbingVM;
@{
    //Layout = 0;
    ViewData["Title"] = "Index";
    var k = 0;
}

<style>
    .chessboard {
        @*width:@(Model.dimension * 80 + 50 + "px");
        height:@(Model.dimension * 80 + 50 + "px");*@
        width:604.4px;
        height:604.4px;
    margin: 20px;
    border: 25px solid #333;
    display:inline-block;
}
.black {
    float: left;
    width: @(554.4/Model.dimension+"px");
    height: @(554.4/Model.dimension+"px");
    background-color: #999;
      font-size:50px;
    text-align:center;
    display: table-cell;
    vertical-align:middle;
}
.white {
    float: left;
    width: @(554.4/Model.dimension+"px");
    height: @(554.4/Model.dimension+"px");
    background-color: #fff;
    font-size:50px;
    text-align:center;
    display: table-cell;
    vertical-align:middle;
</style>
<h3>Hill Climbing</h3>

<div id="HillClimbingDiv">
<div class="chessboard">
    @for (int i = 0; i < Model.dimension; i++)
    {
        if (i % 2 == 0)
        {
            for (int j = 0; j < Model.dimension; j++)
            {
                if (j % 2 == 0)
                {
                    if (Model.array[k] == 1)
                    {
                        <div class="white">&#9819;</div>

                    }
                    else
                    {
                        <div class="white"></div>
                    }
                }
                else
                {
                    if (Model.array[k] == 1)
                    {
                        <div class="black">&#9819;</div>

                    }
                    else
                    {
                        <div class="black"></div>

                    }
                }
                k++;
            }

        }
        else
        {
            for (int j = 0; j < Model.dimension; j++)
            {
                if (j % 2 == 0)
                {
                    if (Model.array[k]== 1)
                    {
                        <div class="black">&#9819;</div>

                    }
                    else
                    {
                        <div class="black"></div>
                    }
                }
                else
                {
                    if (Model.array[k] == 1)
                    {
                        <div class="white">&#9819;</div>

                    }
                    else
                    {
                        <div class="white"></div>

                    }
                }
                k++;
            }
        }
    }


</div>
<div style="display:inline-block;float:right" id="Options">
    <form asp-action="GenerateRandomState">
        <select name="dim" asp-for="dimension" asp-items=@Model.dimensions>
        </select>
        <input asp-for="dimension" hidden />
        <input asp-for="stepsInSameState" hidden />
        <input asp-for="heuristic" hidden />
        <p><span>Heuristic: @Model.heuristic</span></p>
        <p><span>Counter: @Model.counter</span></p>
        <input type="submit" value="Generate random state" />
    </form>
    Number of moves in the same state <input value=@Model.stepsInSameState id="stepsInSameStateID" /><br />
    <a onclick="HillClimbing()" class="btn btn-info">Execute algorithm</a>
</div>
    </div>
<script>
    function HillClimbing() {  

        var dim=@Model.dimension;
        var Array = "@(Model.array == null ? string.Empty : string.Join("", Model.array))";
        $.ajax({
            url: '@Url.Action("HillClimbingA", "HillClimbing")',
            method: 'POST',
            data: {
                //test: test3,
                stringArray: Array,
                dim:@Model.dimension,
                stepsInSameState:$("#stepsInSameStateID").val()
            },
            success: function (data) {
                $("#HillClimbingDiv").html(data);
            }
        });
    }

    </script>